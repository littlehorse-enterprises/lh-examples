services:
  # LittleHorse standalone server with embedded Kafka
  littlehorse:
    image: ghcr.io/littlehorse-enterprises/littlehorse/lh-standalone:latest
    container_name: order-resilience-littlehorse
    pull_policy: always
    ports:
      - "2023:2023"   # LittleHorse server
      - "9092:9092"   # Kafka broker
      - "8080:8080"   # LittleHorse dashboard
    environment:
      - LHS_KAFKA_BOOTSTRAP_SERVERS=localhost:9092
      - LHS_SHOULD_CREATE_TOPICS=true
      - LHS_CLUSTER_ID=my-cluster
      - LHS_INSTANCE_ID=1
    networks:
      - order-resilience
    healthcheck:
      test: curl -f localhost:1822/liveness
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    volumes:
      - lh_data:/var/lib/lh/data

  yugabytedb:
    image: yugabytedb/yugabyte:latest
    container_name: order-resilience-yugabytedb
    ports:
      - "4233:5433"  # YSQL
      - "4270:7000"  # Admin UI
    environment:
      - TZ=UTC
    command: bin/yugabyted start --daemon=false --ui=true
    volumes:
      - yugabyte-data:/home/yugabyte/yb_data
    networks:
      - order-resilience

  db-init:
    image: yugabytedb/yugabyte:latest
    depends_on:
      yugabytedb:
        condition: service_started
    entrypoint: >
      bash -c "
        echo 'Waiting for YugabyteDB to be ready...';
        until ysqlsh -h yugabytedb -p 5433 -c 'SELECT 1'; do
          sleep 2;
        done;
        echo 'Creating databases...';
        ysqlsh -h yugabytedb -p 5433 -c \"CREATE DATABASE customerdb;\";
        ysqlsh -h yugabytedb -p 5433 -c \"CREATE DATABASE coupondb;\";
        ysqlsh -h yugabytedb -p 5433 -c \"CREATE DATABASE productdb;\";
        ysqlsh -h yugabytedb -p 5433 -c \"CREATE DATABASE orderdb;\";
      "
    networks:
      - order-resilience

networks:
  order-resilience:

volumes:
  yugabyte-data:
  lh_data:
